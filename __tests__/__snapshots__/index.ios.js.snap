// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View
  onLayout={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    style={
      Object {
        "flex": 1,
        "flexDirection": "column-reverse",
      }
    }
  >
    <View
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View
        pointerEvents="auto"
        style={
          Object {
            "backgroundColor": "#E9E9EF",
            "bottom": 0,
            "left": 0,
            "opacity": 1,
            "position": "absolute",
            "right": 0,
            "shadowColor": "black",
            "shadowOffset": Object {
              "height": 0,
              "width": 0,
            },
            "shadowOpacity": 0.4,
            "shadowRadius": 10,
            "top": 0,
            "transform": Array [
              Object {
                "translateX": 0,
              },
              Object {
                "translateY": 0,
              },
            ],
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flex": 1,
              "flexDirection": "column",
              "justifyContent": "center",
            }
          }
        >
          <View>
            <Text
              accessible={true}
              allowFontScaling={true}
              disabled={false}
              ellipsizeMode="tail"
            >
              Username
            </Text>
            <TextInput
              onChangeText={[Function]}
              style={
                Object {
                  "borderColor": "blue",
                  "borderWidth": 1,
                  "height": 40,
                  "width": 750,
                }
              }
              value=""
            />
          </View>
          <View>
            <Text
              accessible={true}
              allowFontScaling={true}
              disabled={false}
              ellipsizeMode="tail"
            >
              Password
            </Text>
            <TextInput
              onChangeText={[Function]}
              secureTextEntry={true}
              style={
                Object {
                  "borderColor": "blue",
                  "borderWidth": 1,
                  "height": 40,
                  "width": 750,
                }
              }
              value=""
            />
          </View>
          <View
            accessibilityComponentType="button"
            accessibilityLabel={undefined}
            accessibilityTraits={
              Array [
                "button",
              ]
            }
            accessible={true}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <View
              style={
                Array [
                  Object {},
                ]
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                disabled={false}
                ellipsizeMode="tail"
                style={
                  Array [
                    Object {
                      "color": "#0C42FD",
                      "fontSize": 18,
                      "padding": 8,
                      "textAlign": "center",
                    },
                  ]
                }
              >
                SignUp?
              </Text>
            </View>
          </View>
          <View
            accessibilityComponentType="button"
            accessibilityLabel={undefined}
            accessibilityTraits={
              Array [
                "button",
              ]
            }
            accessible={true}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <View
              style={
                Array [
                  Object {},
                ]
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                disabled={false}
                ellipsizeMode="tail"
                style={
                  Array [
                    Object {
                      "color": "#0C42FD",
                      "fontSize": 18,
                      "padding": 8,
                      "textAlign": "center",
                    },
                  ]
                }
              >
                Login?
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;
